{"remainingRequest":"C:\\Maike\\gluecksrad-adjektive\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Maike\\gluecksrad-adjektive\\node_modules\\babel-loader\\lib\\index.js!C:\\Maike\\gluecksrad-adjektive\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Maike\\gluecksrad-adjektive\\src\\data\\index.js","dependencies":[{"path":"C:\\Maike\\gluecksrad-adjektive\\src\\data\\index.js","mtime":1612008972085},{"path":"C:\\Maike\\gluecksrad-adjektive\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1612009238007},{"path":"C:\\Maike\\gluecksrad-adjektive\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1612009238127},{"path":"C:\\Maike\\gluecksrad-adjektive\\node_modules\\babel-loader\\lib\\index.js","mtime":1612009237977},{"path":"C:\\Maike\\gluecksrad-adjektive\\node_modules\\eslint-loader\\index.js","mtime":1612009255137}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5wYXJzZS1pbnQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IHsgREVGQVVMVF9QUkVTRVRTIH0gZnJvbSAnLi9wcmVzZXRzJzsKdmFyIENPTE9SUyA9IFsnI2VmOWE5YScsICcjRkZGNTlEJywgJyM4MENCQzQnLCAnI0Y0OEZCMScsICcjRkZDQzgwJywgJyM4MUQ0RkEnLCAnI0IzOUREQicsICcjQzVFMUE1J107CnZhciBOVU1fQ09MT1JTID0gQ09MT1JTLmxlbmd0aDsKZXhwb3J0IHZhciBERUZBVUxUX0ZSRVFVRU5DWSA9IDQ7CmV4cG9ydCB2YXIgREVGQVVMVF9URVhUX0NPTE9SID0gJyMzMzMnOwpleHBvcnQgdmFyIGNyZWF0ZU5ld1ByaXplID0gZnVuY3Rpb24gY3JlYXRlTmV3UHJpemUoKSB7CiAgcmV0dXJuIHsKICAgIG5hbWU6ICcnLAogICAgZnJlcTogNCwKICAgIGJnOiAnJywKICAgIHRleHQ6ICcnLAogICAgaGlkZTogZmFsc2UsCiAgICBmb250TW9kOiAxCiAgfTsKfTsgLy8gUmV0dXJucyBhIGxpc3QgY29udGFpbmluZyB0aGUgcHJpemVzIHRoYXQgY2FuIGJlIHdvbi4KCmV4cG9ydCB2YXIgZ2V0QXZhaWxhYmxlID0gZnVuY3Rpb24gZ2V0QXZhaWxhYmxlKHByaXplcykgewogIHZhciBsaXN0ID0gW107CiAgcHJpemVzLmZvckVhY2goZnVuY3Rpb24gKHByaXplKSB7CiAgICBpZiAoIXByaXplLmhpZGUpIHsKICAgICAgbGlzdC5wdXNoKHByaXplKTsKICAgIH0KICB9KTsKICByZXR1cm4gbGlzdDsKfTsgLy8gUmV0dXJucyB0aGUgZGVmYXVsdCBiYWNrZ3JvdW5kIGNvbG9yIGdpdmVuIHRoZSBwcml6ZSBpbmRleC4KCmV4cG9ydCB2YXIgZ2V0RGVmYXVsdEJnQ29sb3IgPSBmdW5jdGlvbiBnZXREZWZhdWx0QmdDb2xvcihpbmRleCkgewogIHJldHVybiBDT0xPUlNbaW5kZXggJSBOVU1fQ09MT1JTXTsKfTsKZXhwb3J0IHZhciBnZXRJbml0aWFsUHJlc2V0ID0gZnVuY3Rpb24gZ2V0SW5pdGlhbFByZXNldChwYXJhbSwgcHJlc2V0cykgewogIHZhciBpbmRleCA9IHBhcnNlSW50KHBhcmFtKTsgLy8gVXNlIGEgZGVmYXVsdCAoYnVpbHQtaW4pIHByZXNldC4KCiAgaWYgKGluZGV4ID4gMCAmJiBpbmRleCA8PSBERUZBVUxUX1BSRVNFVFMubGVuZ3RoKSB7CiAgICByZXR1cm4gREVGQVVMVF9QUkVTRVRTW2luZGV4IC0gMV07CiAgfSAvLyBVc2UgYSB1c2VyIHByZXNldC4KCgogIHZhciBwcmVzZXQgPSBwcmVzZXRzW2luZGV4IC0gMSAtIERFRkFVTFRfUFJFU0VUUy5sZW5ndGhdOwogIHJldHVybiBwcmVzZXQgPyBwcmVzZXQuZGF0YSA6IG51bGw7Cn07IC8vIFJldHVybnMgdGhlIHRvdGFsIGZyZXF1ZW5jeSBvZiB0aGUgbGlzdCBvZiBwcml6ZXMuCgpleHBvcnQgdmFyIGdldFRvdGFsRnJlcXVlbmN5ID0gZnVuY3Rpb24gZ2V0VG90YWxGcmVxdWVuY3kocHJpemVzKSB7CiAgdmFyIGNvdW50ID0gMDsKICBwcml6ZXMuZm9yRWFjaChmdW5jdGlvbiAocHJpemUpIHsKICAgIGNvdW50ICs9IHByaXplLmZyZXEgfHwgREVGQVVMVF9GUkVRVUVOQ1k7CiAgfSk7CiAgcmV0dXJuIGNvdW50Owp9Ow=="},{"version":3,"sources":["C:/Maike/gluecksrad-adjektive/src/data/index.js"],"names":["DEFAULT_PRESETS","COLORS","NUM_COLORS","length","DEFAULT_FREQUENCY","DEFAULT_TEXT_COLOR","createNewPrize","name","freq","bg","text","hide","fontMod","getAvailable","prizes","list","forEach","prize","push","getDefaultBgColor","index","getInitialPreset","param","presets","parseInt","preset","data","getTotalFrequency","count"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,WAAhC;AAEA,IAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,CAAf;AACA,IAAMC,UAAU,GAAGD,MAAM,CAACE,MAA1B;AAEA,OAAO,IAAMC,iBAAiB,GAAG,CAA1B;AACP,OAAO,IAAMC,kBAAkB,GAAG,MAA3B;AAEP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAO;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,IAAI,EAAE,CAAlB;AAAqBC,IAAAA,EAAE,EAAE,EAAzB;AAA6BC,IAAAA,IAAI,EAAE,EAAnC;AAAuCC,IAAAA,IAAI,EAAE,KAA7C;AAAoDC,IAAAA,OAAO,EAAE;AAA7D,GAAP;AAAA,CAAvB,C,CAEP;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,MAAM,EAAI;AACpC,MAAMC,IAAI,GAAG,EAAb;AACAD,EAAAA,MAAM,CAACE,OAAP,CAAe,UAAAC,KAAK,EAAI;AACtB,QAAI,CAACA,KAAK,CAACN,IAAX,EAAiB;AACfI,MAAAA,IAAI,CAACG,IAAL,CAAUD,KAAV;AACD;AACF,GAJD;AAKA,SAAOF,IAAP;AACD,CARM,C,CAUP;;AACA,OAAO,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK;AAAA,SAAInB,MAAM,CAACmB,KAAK,GAAGlB,UAAT,CAAV;AAAA,CAA/B;AAEP,OAAO,IAAMmB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAQC,OAAR,EAAoB;AAClD,MAAMH,KAAK,GAAGI,QAAQ,CAACF,KAAD,CAAtB,CADkD,CAGlD;;AACA,MAAIF,KAAK,GAAG,CAAR,IAAaA,KAAK,IAAIpB,eAAe,CAACG,MAA1C,EAAkD;AAChD,WAAOH,eAAe,CAACoB,KAAK,GAAG,CAAT,CAAtB;AACD,GANiD,CAQlD;;;AACA,MAAMK,MAAM,GAAGF,OAAO,CAACH,KAAK,GAAG,CAAR,GAAYpB,eAAe,CAACG,MAA7B,CAAtB;AACA,SAAOsB,MAAM,GAAGA,MAAM,CAACC,IAAV,GAAiB,IAA9B;AACD,CAXM,C,CAaP;;AACA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAb,MAAM,EAAI;AACzC,MAAIc,KAAK,GAAG,CAAZ;AACAd,EAAAA,MAAM,CAACE,OAAP,CAAe,UAAAC,KAAK,EAAI;AACtBW,IAAAA,KAAK,IAAIX,KAAK,CAACT,IAAN,IAAcJ,iBAAvB;AACD,GAFD;AAGA,SAAOwB,KAAP;AACD,CANM","sourcesContent":["import { DEFAULT_PRESETS } from './presets';\r\n\r\nconst COLORS = ['#ef9a9a', '#FFF59D', '#80CBC4', '#F48FB1', '#FFCC80', '#81D4FA', '#B39DDB', '#C5E1A5'];\r\nconst NUM_COLORS = COLORS.length;\r\n\r\nexport const DEFAULT_FREQUENCY = 4;\r\nexport const DEFAULT_TEXT_COLOR = '#333';\r\n\r\nexport const createNewPrize = () => ({ name: '', freq: 4, bg: '', text: '', hide: false, fontMod: 1 });\r\n\r\n// Returns a list containing the prizes that can be won.\r\nexport const getAvailable = prizes => {\r\n  const list = [];\r\n  prizes.forEach(prize => {\r\n    if (!prize.hide) {\r\n      list.push(prize);\r\n    }\r\n  });\r\n  return list;\r\n};\r\n\r\n// Returns the default background color given the prize index.\r\nexport const getDefaultBgColor = index => COLORS[index % NUM_COLORS];\r\n\r\nexport const getInitialPreset = (param, presets) => {\r\n  const index = parseInt(param);\r\n\r\n  // Use a default (built-in) preset.\r\n  if (index > 0 && index <= DEFAULT_PRESETS.length) {\r\n    return DEFAULT_PRESETS[index - 1];\r\n  }\r\n\r\n  // Use a user preset.\r\n  const preset = presets[index - 1 - DEFAULT_PRESETS.length];\r\n  return preset ? preset.data : null;\r\n};\r\n\r\n// Returns the total frequency of the list of prizes.\r\nexport const getTotalFrequency = prizes => {\r\n  let count = 0;\r\n  prizes.forEach(prize => {\r\n    count += prize.freq || DEFAULT_FREQUENCY;\r\n  });\r\n  return count;\r\n};\r\n"]}]}